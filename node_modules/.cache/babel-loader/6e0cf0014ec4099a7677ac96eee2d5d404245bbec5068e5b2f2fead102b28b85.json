{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisse\\\\Asp.netReact_Training\\\\test1\\\\qAndA\\\\frontend\\\\src\\\\SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport { Page } from \"./Page\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { QuestionList } from \"./QuestionList\";\nimport { searchQuestions } from \"./questionsData\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [questions, setQuestions] = React.useState();\n  const search = searchParams.get(\"critiria\") || \"\";\n  React.useEffect(() => {\n    const doSearch = async critiria => {\n      const result = await searchQuestions(critiria);\n      setQuestions(result);\n    };\n    doSearch(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Search Results\",\n    children: [search && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary fw-bolder fst-italic\",\n      children: [\"for \\\"\", search, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(QuestionList, {\n      data: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"Uz1GtHJJ2ebZvzcO027bU96It6I=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["Page","useSearchParams","QuestionList","searchQuestions","React","SearchPage","searchParams","questions","setQuestions","useState","search","get","useEffect","doSearch","critiria","result"],"sources":["C:/Users/wisse/Asp.netReact_Training/test1/qAndA/frontend/src/SearchPage.tsx"],"sourcesContent":["import { Page } from \"./Page\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { QuestionList } from \"./QuestionList\";\r\nimport { searchQuestions, QuestionData } from \"./questionsData\";\r\nimport React from \"react\";\r\n\r\nexport const SearchPage = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const [questions, setQuestions] = React.useState<QuestionData[]>();\r\n    const search = searchParams.get(\"critiria\") || \"\";\r\n\r\n    React.useEffect(() => {\r\n        const doSearch = async (critiria: string) => {\r\n            const result = await searchQuestions(critiria);\r\n            setQuestions(result);\r\n        };\r\n        doSearch(search);\r\n    }, [search]);\r\n\r\n    return (\r\n        <Page title=\"Search Results\">\r\n            {search && (\r\n                <p className=\"text-secondary fw-bolder fst-italic\">\r\n                    for \"{search}\"\r\n                </p>\r\n            )}{\" \"}\r\n            <QuestionList data={questions} />\r\n        </Page>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,eAAe,QAAsB,iBAAiB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,YAAY,CAAC,GAAGL,eAAe,EAAE;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGJ,KAAK,CAACK,QAAQ,EAAkB;EAClE,MAAMC,MAAM,GAAGJ,YAAY,CAACK,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;EAEjDP,KAAK,CAACQ,SAAS,CAAC,MAAM;IAClB,MAAMC,QAAQ,GAAG,MAAOC,QAAgB,IAAK;MACzC,MAAMC,MAAM,GAAG,MAAMZ,eAAe,CAACW,QAAQ,CAAC;MAC9CN,YAAY,CAACO,MAAM,CAAC;IACxB,CAAC;IACDF,QAAQ,CAACH,MAAM,CAAC;EACpB,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACI,QAAC,IAAI;IAAC,KAAK,EAAC,gBAAgB;IAAA,WACvBA,MAAM,iBACH;MAAG,SAAS,EAAC,qCAAqC;MAAA,WAAC,QAC1C,EAACA,MAAM,EAAC,IACjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,EAAE,GAAG,eACN,QAAC,YAAY;MAAC,IAAI,EAAEH;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEf,CAAC;AAAC,GAvBWF,UAAU;EAAA,QACIJ,eAAe;AAAA;AAAA,KAD7BI,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}