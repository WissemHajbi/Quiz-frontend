{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisse\\\\Asp.netReact_Training\\\\test1\\\\qAndA\\\\frontend\\\\src\\\\SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport { Page } from \"./Page\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { QuestionList } from \"./QuestionList\";\nimport { searchQuestions } from \"./questionsData\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gettingSearchedQuestionsAction, gotSearchedQuestionsAction } from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get(\"critiria\") || \"\";\n  const questions = useSelector(state => state.questions.searched);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const doSearch = async critiria => {\n      dispatch(gettingSearchedQuestionsAction());\n      const result = await searchQuestions(critiria);\n      dispatch(gotSearchedQuestionsAction(result));\n    };\n    doSearch(search);\n    console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\n    console.log(questions);\n    console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Search Results\",\n    children: [search && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary fst-italic\",\n      children: [\"for \\\"\", search, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(QuestionList, {\n      data: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"1MEKNxTaXxdMAWbGrEfbqI0SIpQ=\", false, function () {\n  return [useSearchParams, useSelector, useDispatch];\n});\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["Page","useSearchParams","QuestionList","searchQuestions","React","useSelector","useDispatch","gettingSearchedQuestionsAction","gotSearchedQuestionsAction","SearchPage","searchParams","search","get","questions","state","searched","dispatch","useEffect","doSearch","critiria","result","console","log"],"sources":["C:/Users/wisse/Asp.netReact_Training/test1/qAndA/frontend/src/SearchPage.tsx"],"sourcesContent":["import { Page } from \"./Page\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { QuestionList } from \"./QuestionList\";\r\nimport { searchQuestions } from \"./questionsData\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    AppState,\r\n    gettingSearchedQuestionsAction,\r\n    gotSearchedQuestionsAction,\r\n} from \"./Store\";\r\n\r\nexport const SearchPage = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const search = searchParams.get(\"critiria\") || \"\";\r\n    const questions = useSelector(\r\n        (state: AppState) => state.questions.searched\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        const doSearch = async (critiria: string) => {\r\n            dispatch(gettingSearchedQuestionsAction());\r\n            const result = await searchQuestions(critiria);\r\n            dispatch(gotSearchedQuestionsAction(result));\r\n        };\r\n        doSearch(search);\r\n        console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\r\n        console.log(questions);\r\n        console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\r\n    }, [search]);\r\n\r\n    return (\r\n        <Page title=\"Search Results\">\r\n            {search && (\r\n                <p className=\"text-secondary fst-italic\">for \"{search}\"</p>\r\n            )}{\" \"}\r\n            <QuestionList data={questions} />\r\n        </Page>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAEIC,8BAA8B,EAC9BC,0BAA0B,QACvB,SAAS;AAAC;AAEjB,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,YAAY,CAAC,GAAGT,eAAe,EAAE;EACxC,MAAMU,MAAM,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;EACjD,MAAMC,SAAS,GAAGR,WAAW,CACxBS,KAAe,IAAKA,KAAK,CAACD,SAAS,CAACE,QAAQ,CAChD;EACD,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9BF,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB,MAAMC,QAAQ,GAAG,MAAOC,QAAgB,IAAK;MACzCH,QAAQ,CAACT,8BAA8B,EAAE,CAAC;MAC1C,MAAMa,MAAM,GAAG,MAAMjB,eAAe,CAACgB,QAAQ,CAAC;MAC9CH,QAAQ,CAACR,0BAA0B,CAACY,MAAM,CAAC,CAAC;IAChD,CAAC;IACDF,QAAQ,CAACP,MAAM,CAAC;IAChBU,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5CD,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;IACtBQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAChD,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,oBACI,QAAC,IAAI;IAAC,KAAK,EAAC,gBAAgB;IAAA,WACvBA,MAAM,iBACH;MAAG,SAAS,EAAC,2BAA2B;MAAA,WAAC,QAAK,EAACA,MAAM,EAAC,IAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,EAAE,GAAG,eACN,QAAC,YAAY;MAAC,IAAI,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEf,CAAC;AAAC,GA5BWJ,UAAU;EAAA,QACIR,eAAe,EAEpBI,WAAW,EAGZC,WAAW;AAAA;AAAA,KANnBG,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}