{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisse\\\\Asp.netReact_Training\\\\test1\\\\qAndA\\\\frontend\\\\src\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { QuestionList } from \"./QuestionList\";\nimport { getUnansweredQuestions } from \"./questionsData\";\nimport { PageTitle } from \"./PageTitle\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { gettingUnansweredQuestionsAction, gotUnansweredQuestionsAction } from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const questions = useSelector(state => state.questions.unanswered);\n  const questionsLoading = useSelector(state => state.questions.loading);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const doGetUnansweredQuestions = async () => {\n      dispatch(gettingUnansweredQuestionsAction());\n      const unansweredQuestions = await getUnansweredQuestions();\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\n    };\n    doGetUnansweredQuestions();\n\n    // next comment is to disable the warning from Eslint =>\n    // eslint-disable-next-line\n\n    console.log(\"bbbbbbbbbbbbbb\");\n    console.log(questions);\n  }, []);\n  const navigate = useNavigate();\n  const handleAskQuestionClick = () => {\n    navigate(\"ask\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      children: \"Unanswered Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAskQuestionClick,\n          className: \"btn btn-primary m-3\",\n          children: \"Ask a question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), questionsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(QuestionList, {\n        data: questions || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"+Ft1GKhq/GBAlwwExKZOwAWcDgI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","QuestionList","getUnansweredQuestions","PageTitle","useNavigate","useSelector","useDispatch","gettingUnansweredQuestionsAction","gotUnansweredQuestionsAction","Home","questions","state","unanswered","questionsLoading","loading","dispatch","useEffect","doGetUnansweredQuestions","unansweredQuestions","console","log","navigate","handleAskQuestionClick"],"sources":["C:/Users/wisse/Asp.netReact_Training/test1/qAndA/frontend/src/Home.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { QuestionList } from \"./QuestionList\";\r\nimport {\r\n    getAllQuestions,\r\n    getUnansweredQuestions,\r\n    QuestionData,\r\n} from \"./questionsData\";\r\nimport { PageTitle } from \"./PageTitle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    gettingUnansweredQuestionsAction,\r\n    gotUnansweredQuestionsAction,\r\n    AppState,\r\n} from \"./Store\";\r\n\r\nexport const Home = () => {\r\n    const questions = useSelector(\r\n        (state: AppState) => state.questions.unanswered\r\n    );\r\n    const questionsLoading = useSelector(\r\n        (state: AppState) => state.questions.loading\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        const doGetUnansweredQuestions = async () => {\r\n            dispatch(gettingUnansweredQuestionsAction());\r\n            const unansweredQuestions = await getUnansweredQuestions();\r\n            dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\r\n        };\r\n        doGetUnansweredQuestions();\r\n\r\n        // next comment is to disable the warning from Eslint =>\r\n        // eslint-disable-next-line\r\n\r\n        console.log(\"bbbbbbbbbbbbbb\");\r\n        console.log(questions);\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleAskQuestionClick = () => {\r\n        navigate(\"ask\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle>Unanswered Questions</PageTitle>\r\n            <div>\r\n                <div>\r\n                    <button\r\n                        onClick={handleAskQuestionClick}\r\n                        className=\"btn btn-primary m-3\"\r\n                    >\r\n                        Ask a question\r\n                    </button>\r\n                </div>\r\n                {questionsLoading ? (\r\n                    <div>Loading ...</div>\r\n                ) : (\r\n                    <QuestionList data={questions || []} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAEIC,sBAAsB,QAEnB,iBAAiB;AACxB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACIC,gCAAgC,EAChCC,4BAA4B,QAEzB,SAAS;AAAC;AAEjB,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACtB,MAAMC,SAAS,GAAGL,WAAW,CACxBM,KAAe,IAAKA,KAAK,CAACD,SAAS,CAACE,UAAU,CAClD;EACD,MAAMC,gBAAgB,GAAGR,WAAW,CAC/BM,KAAe,IAAKA,KAAK,CAACD,SAAS,CAACI,OAAO,CAC/C;EACD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9BN,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClB,MAAMC,wBAAwB,GAAG,YAAY;MACzCF,QAAQ,CAACR,gCAAgC,EAAE,CAAC;MAC5C,MAAMW,mBAAmB,GAAG,MAAMhB,sBAAsB,EAAE;MAC1Da,QAAQ,CAACP,4BAA4B,CAACU,mBAAmB,CAAC,CAAC;IAC/D,CAAC;IACDD,wBAAwB,EAAE;;IAE1B;IACA;;IAEAE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,QAAQ,GAAGjB,WAAW,EAAE;EAE9B,MAAMkB,sBAAsB,GAAG,MAAM;IACjCD,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,SAAS;MAAA,UAAC;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAY,eAC3C;MAAA,wBACI;QAAA,uBACI;UACI,OAAO,EAAEC,sBAAuB;UAChC,SAAS,EAAC,qBAAqB;UAAA,UAClC;QAED;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACP,EACLT,gBAAgB,gBACb;QAAA,UAAK;MAAW;QAAA;QAAA;QAAA;MAAA,QAAM,gBAEtB,QAAC,YAAY;QAAC,IAAI,EAAEH,SAAS,IAAI;MAAG;QAAA;QAAA;QAAA;MAAA,QACvC;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAlDWD,IAAI;EAAA,QACKJ,WAAW,EAGJA,WAAW,EAGnBC,WAAW,EAiBXF,WAAW;AAAA;AAAA,KAxBnBK,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}