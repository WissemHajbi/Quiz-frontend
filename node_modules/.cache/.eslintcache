[{"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\index.tsx":"1","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\App.tsx":"3","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Header.tsx":"4","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Icons.tsx":"5","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Home.tsx":"6","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\questionsData.ts":"7","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionList.tsx":"8","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Question.tsx":"9","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Page.tsx":"10","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\PageTitle.tsx":"11","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AskPage.tsx":"12","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SearchPage.tsx":"13","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignInPage.tsx":"14","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\NotFoundPage.tsx":"15","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionPage.tsx":"16","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AnswerList.tsx":"17","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Answer.tsx":"18"},{"size":564,"mtime":1672737221923,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1672220741348,"results":"21","hashOfConfig":"20"},{"size":1289,"mtime":1673120218191,"results":"22","hashOfConfig":"20"},{"size":1375,"mtime":1674548638768,"results":"23","hashOfConfig":"20"},{"size":100,"mtime":1672223148549,"results":"24","hashOfConfig":"20"},{"size":1505,"mtime":1673081070444,"results":"25","hashOfConfig":"20"},{"size":2341,"mtime":1673081604490,"results":"26","hashOfConfig":"20"},{"size":603,"mtime":1673083237498,"results":"27","hashOfConfig":"20"},{"size":943,"mtime":1673081223448,"results":"28","hashOfConfig":"20"},{"size":300,"mtime":1672738055305,"results":"29","hashOfConfig":"20"},{"size":156,"mtime":1672737890233,"results":"30","hashOfConfig":"20"},{"size":3422,"mtime":1674470506987,"results":"31","hashOfConfig":"20"},{"size":936,"mtime":1674548914362,"results":"32","hashOfConfig":"20"},{"size":121,"mtime":1672738513813,"results":"33","hashOfConfig":"20"},{"size":220,"mtime":1672904453373,"results":"34","hashOfConfig":"20"},{"size":3529,"mtime":1674470475912,"results":"35","hashOfConfig":"20"},{"size":506,"mtime":1673080295833,"results":"36","hashOfConfig":"20"},{"size":458,"mtime":1674469755761,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"9hryfo",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\App.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Header.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Icons.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Home.tsx",["97"],[],"import React from \"react\";\r\nimport { QuestionList } from \"./QuestionList\";\r\nimport {\r\n    getAllQuestions,\r\n    getUnansweredQuestions,\r\n    QuestionData,\r\n} from \"./questionsData\";\r\nimport { PageTitle } from \"./PageTitle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const Home = () => {\r\n    const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n    const [questionsLoading, setQuestionsLoading] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        const doGetUnansweredQuestions = async () => {\r\n            const unansweredQuestions = await getAllQuestions();\r\n            setQuestions(unansweredQuestions);\r\n            setQuestionsLoading(false);\r\n        };\r\n        doGetUnansweredQuestions();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleAskQuestionClick = () => {\r\n        navigate(\"ask\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle>Unanswered Questions</PageTitle>\r\n            <div>\r\n                <div>\r\n                    <button\r\n                        onClick={handleAskQuestionClick}\r\n                        className=\"btn btn-primary m-3\"\r\n                    >\r\n                        Ask a question\r\n                    </button>\r\n                </div>\r\n                {questionsLoading ? (\r\n                    <div>Loading ...</div>\r\n                ) : (\r\n                    <QuestionList data={questions || []} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\questionsData.ts",["98"],[],"import { wait } from \"@testing-library/user-event/dist/utils\";\r\n\r\nexport interface QuestionData {\r\n    Id: number;\r\n    title: string;\r\n    content: string;\r\n    userName: string;\r\n    created: Date;\r\n    answers: AnswerData[];\r\n}\r\n\r\nexport interface AnswerData {\r\n    Id: number;\r\n    content: string;\r\n    userName: string;\r\n    created: Date;\r\n}\r\n\r\nconst questions: QuestionData[] = [\r\n    {\r\n        Id: 1,\r\n        title: \"Why should I learn TypeScript?\",\r\n        content:\r\n            \"TypeScript seems to be getting popular so I wondered whether it is worth my time learning it? What benefits does it give over JavaScript?\",\r\n        userName: \"Bob\",\r\n        created: new Date(),\r\n        answers: [\r\n            {\r\n                Id: 1,\r\n                content:\r\n                    \"To catch problems earlier speeding up your developments\",\r\n                userName: \"Jane\",\r\n                created: new Date(),\r\n            },\r\n            {\r\n                Id: 2,\r\n                content:\r\n                    \"So, that you can use the JavaScript features of tomorrow, today\",\r\n                userName: \"Fred\",\r\n                created: new Date(),\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        Id: 2,\r\n        title: \"Which state management tool should I use?\",\r\n        content:\r\n            \"There seem to be a fair few state management tools around for React - React, Unstated, ... Which one should I use?\",\r\n        userName: \"Bob\",\r\n        created: new Date(),\r\n        answers: [],\r\n    },\r\n];\r\n\r\nexport const getUnansweredQuestions = async (): Promise<QuestionData[]> => {\r\n    await wait(200);\r\n    return questions.filter((q) => q.answers.length === 0);\r\n};\r\n\r\nexport const getQuestion = async (Id: number): Promise<QuestionData | null> => {\r\n    const result = questions.filter((q) => q.Id == Id);\r\n    return result.length === 0 ? null : result[0];\r\n};\r\n\r\nexport const getAllQuestions = async (): Promise<QuestionData[]> => {\r\n    await wait(200);\r\n    return questions;\r\n};\r\n\r\nexport const searchQuestions = async (\r\n    critiria: string\r\n): Promise<QuestionData[]> => {\r\n    await wait(300);\r\n    return questions.filter(\r\n        (q) =>\r\n            q.title.toLowerCase().indexOf(critiria.toLowerCase()) >= 0 ||\r\n            q.content.toLowerCase().indexOf(critiria.toLowerCase()) >= 0\r\n    );\r\n};\r\n","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionList.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Question.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Page.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\PageTitle.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AskPage.tsx",["99","100","101"],[],"import { Page } from \"./Page\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { truncate } from \"fs/promises\";\r\nimport { ErrorResponse } from \"@remix-run/router\";\r\nimport React from \"react\";\r\n\r\ntype FormData = {\r\n    title: string;\r\n    content: string;\r\n};\r\n\r\nexport const AskPage = () => {\r\n    const {\r\n        register,\r\n        setError,\r\n        formState: { errors },\r\n        handleSubmit,\r\n    } = useForm<FormData>();\r\n\r\n    const onSubmit = (data: FormData) => {};\r\n\r\n    return (\r\n        <Page title=\"Ask a question\">\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <div className=\"card\" style={{ width: \"50%\" }}>\r\n                    <div className=\"card-body \">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <h5 className=\"card-title\">Title</h5>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"title\", {\r\n                                    required: true,\r\n                                })}\r\n                                className=\"form-control\"\r\n                                id=\"title\"\r\n                                name=\"title\"\r\n                                placeholder=\"enter the title\"\r\n                            />\r\n                            {errors.title &&\r\n                                errors.title.type === \"required\" && (\r\n                                    <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                        this field is requiered\r\n                                    </p>\r\n                                )}\r\n                            <h5 className=\"card-title mt-4\">Content</h5>\r\n                            <div className=\"form-floating\">\r\n                                <textarea\r\n                                    {...register(\"content\", {\r\n                                        required: true,\r\n                                        minLength: 10,\r\n                                    })}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Leave a comment here\"\r\n                                    style={{ height: \"70px\" }}\r\n                                ></textarea>\r\n                            </div>\r\n                            {errors.content?.type === \"required\" && (\r\n                                <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                    this field is requiered\r\n                                </p>\r\n                            )}\r\n                            {errors.content?.type === \"minLength\" && (\r\n                                <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                    10 characters are minimum in this field\r\n                                </p>\r\n                            )}\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-success mt-4\"\r\n                            >\r\n                                Submit your question\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default AskPage;\r\n",[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SearchPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignInPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\NotFoundPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionPage.tsx",["102"],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AnswerList.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Answer.tsx",[],[],{"ruleId":"103","severity":1,"message":"104","line":5,"column":5,"nodeType":"105","messageId":"106","endLine":5,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":61,"column":49,"nodeType":"109","messageId":"110","endLine":61,"endColumn":51},{"ruleId":"103","severity":1,"message":"111","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":18},{"ruleId":"103","severity":1,"message":"112","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":23},{"ruleId":"103","severity":1,"message":"113","line":15,"column":9,"nodeType":"105","messageId":"106","endLine":15,"endColumn":17},{"ruleId":"103","severity":1,"message":"114","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},"@typescript-eslint/no-unused-vars","'getUnansweredQuestions' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'truncate' is defined but never used.","'ErrorResponse' is defined but never used.","'setError' is assigned a value but never used.","'Page' is defined but never used."]