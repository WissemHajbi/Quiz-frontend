[{"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\index.tsx":"1","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\App.tsx":"3","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Header.tsx":"4","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Icons.tsx":"5","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Home.tsx":"6","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\questionsData.ts":"7","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionList.tsx":"8","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Question.tsx":"9","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Page.tsx":"10","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\PageTitle.tsx":"11","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AskPage.tsx":"12","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SearchPage.tsx":"13","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignInPage.tsx":"14","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\NotFoundPage.tsx":"15","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionPage.tsx":"16","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AnswerList.tsx":"17","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Answer.tsx":"18","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Store.ts":"19","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignOutPage.tsx":"20","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AuthorizedPage.tsx":"21"},{"size":564,"mtime":1672737221923,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1672220741348,"results":"24","hashOfConfig":"23"},{"size":3284,"mtime":1676886099261,"results":"25","hashOfConfig":"23"},{"size":2134,"mtime":1676885964122,"results":"26","hashOfConfig":"23"},{"size":100,"mtime":1672223148549,"results":"27","hashOfConfig":"23"},{"size":2113,"mtime":1676886029344,"results":"28","hashOfConfig":"23"},{"size":4629,"mtime":1676572658291,"results":"29","hashOfConfig":"23"},{"size":677,"mtime":1676570680414,"results":"30","hashOfConfig":"23"},{"size":951,"mtime":1676570474543,"results":"31","hashOfConfig":"23"},{"size":300,"mtime":1672738055305,"results":"32","hashOfConfig":"23"},{"size":156,"mtime":1672737890233,"results":"33","hashOfConfig":"23"},{"size":4033,"mtime":1674550303191,"results":"34","hashOfConfig":"23"},{"size":1237,"mtime":1676572674416,"results":"35","hashOfConfig":"23"},{"size":512,"mtime":1676885784091,"results":"36","hashOfConfig":"23"},{"size":220,"mtime":1672904453373,"results":"37","hashOfConfig":"23"},{"size":4832,"mtime":1676886250896,"results":"38","hashOfConfig":"23"},{"size":512,"mtime":1674551749174,"results":"39","hashOfConfig":"23"},{"size":458,"mtime":1674469755761,"results":"40","hashOfConfig":"23"},{"size":3983,"mtime":1674743140033,"results":"41","hashOfConfig":"23"},{"size":906,"mtime":1676885657990,"results":"42","hashOfConfig":"23"},{"size":400,"mtime":1676883956993,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"9hryfo",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\App.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Header.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Icons.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Home.tsx",["111","112"],["113"],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\questionsData.ts",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionList.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Question.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Page.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\PageTitle.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AskPage.tsx",["114"],[],"import { Page } from \"./Page\";\r\nimport { useForm, useFormState } from \"react-hook-form\";\r\nimport { postQuestion } from \"./questionsData\";\r\nimport React from \"react\";\r\n\r\ntype FormData = {\r\n    title: string;\r\n    content: string;\r\n};\r\n\r\nexport const AskPage = () => {\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        handleSubmit,\r\n    } = useForm<FormData>();\r\n\r\n    const [successfull, setSuccessfull] = React.useState(false);\r\n\r\n    const onSubmit = async (data: FormData) => {\r\n        const res = await postQuestion({\r\n            title: data.title,\r\n            content: data.content,\r\n            created: new Date(),\r\n            userName: \"wissem\",\r\n        });\r\n        setSuccessfull(res ? true : false);\r\n    };\r\n\r\n    return (\r\n        <Page title=\"Ask a question\">\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <div className=\"card\" style={{ width: \"50%\" }}>\r\n                    <div className=\"card-body \">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <h5 className=\"card-title\">Title</h5>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"title\", {\r\n                                    required: true,\r\n                                })}\r\n                                className=\"form-control\"\r\n                                id=\"title\"\r\n                                name=\"title\"\r\n                                placeholder=\"enter the title\"\r\n                            />\r\n                            {errors.title &&\r\n                                errors.title.type === \"required\" && (\r\n                                    <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                        this field is requiered\r\n                                    </p>\r\n                                )}\r\n                            <h5 className=\"card-title mt-4\">Content</h5>\r\n                            <div className=\"form-floating\">\r\n                                <textarea\r\n                                    {...register(\"content\", {\r\n                                        required: true,\r\n                                        minLength: 10,\r\n                                    })}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Leave a comment here\"\r\n                                    style={{ height: \"70px\" }}\r\n                                ></textarea>\r\n                            </div>\r\n                            {errors.content?.type === \"required\" && (\r\n                                <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                    this field is requiered\r\n                                </p>\r\n                            )}\r\n                            {errors.content?.type === \"minLength\" && (\r\n                                <p className=\"text-danger p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                    10 characters are minimum in this field\r\n                                </p>\r\n                            )}\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-success mt-4\"\r\n                                disabled={successfull}\r\n                            >\r\n                                Submit your question\r\n                            </button>\r\n                            {successfull && (\r\n                                <p className=\"text-success p-2 fs-6 fw-bold fst-italic opacity-75\">\r\n                                    form is submitted successfully :)\r\n                                </p>\r\n                            )}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default AskPage;\r\n","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SearchPage.tsx",["115"],[],"import { Page } from \"./Page\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { QuestionList } from \"./QuestionList\";\r\nimport { searchQuestions } from \"./questionsData\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    AppState,\r\n    gettingSearchedQuestionsAction,\r\n    gotSearchedQuestionsAction,\r\n} from \"./Store\";\r\n\r\nexport const SearchPage = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const search = searchParams.get(\"critiria\") || \"\";\r\n    const questions = useSelector(\r\n        (state: AppState) => state.questions.searched\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        const doSearch = async (critiria: string) => {\r\n            dispatch(gettingSearchedQuestionsAction());\r\n            const result = await searchQuestions(critiria);\r\n            dispatch(gotSearchedQuestionsAction(result));\r\n        };\r\n        doSearch(search);\r\n    }, [search]);\r\n\r\n    return (\r\n        <Page title=\"Search Results\">\r\n            {search && (\r\n                <p className=\"text-secondary fst-italic\">for \"{search}\"</p>\r\n            )}{\" \"}\r\n            <QuestionList data={questions} />\r\n        </Page>\r\n    );\r\n};\r\n","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignInPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\NotFoundPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\QuestionPage.tsx",["116","117","118"],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AnswerList.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Answer.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\Store.ts",["119","120","121"],[],"import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { QuestionData } from \"./questionsData\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\n\r\ninterface QuestionsState {\r\n    // An array of unanswered questions\r\n    readonly unanswered: QuestionData[];\r\n\r\n    // Thether a server request is being made\r\n    readonly loading: boolean;\r\n\r\n    // The question that the user is currently viewing\r\n    readonly viewing: QuestionData | null;\r\n\r\n    // An array of questions mathced with the search\r\n    readonly searched: QuestionData[];\r\n}\r\n\r\nexport interface AppState {\r\n    readonly questions: QuestionsState;\r\n}\r\n\r\n// Initial state for the store\r\nconst InitialQuestionState: QuestionsState = {\r\n    unanswered: [],\r\n    loading: false,\r\n    viewing: null,\r\n    searched: [],\r\n};\r\n\r\n// Actions for getting the unasnwered questions\r\nexport const GETTINGUNANSWEREDQUESTIONS = \"GettingUnansweredQuestions\";\r\nexport const gettingUnansweredQuestionsAction = () =>\r\n    ({\r\n        type: GETTINGUNANSWEREDQUESTIONS,\r\n    } as const);\r\n\r\nexport const GOTUNANSWEREDQUESTIONS = \"GotUnansweredQuestions\";\r\nexport const gotUnansweredQuestionsAction = (questions: QuestionData[]) =>\r\n    ({\r\n        type: GOTUNANSWEREDQUESTIONS,\r\n        questions: questions,\r\n    } as const);\r\n\r\n// Actions for getting the viewed question\r\nexport const GETTINGQUESTION = \"GettingQuestion\";\r\nexport const gettingQuestionAction = () =>\r\n    ({\r\n        type: GETTINGQUESTION,\r\n    } as const);\r\n\r\nexport const GOTQUESTION = \"GotQuestion\";\r\nexport const gotQuestionAction = (question: QuestionData | null) =>\r\n    ({\r\n        type: GOTQUESTION,\r\n        question: question,\r\n    } as const);\r\n\r\n// Actions for getting the searched questions\r\nexport const GETTINGSEARCHEDQUESTIONS = \"GettingSearchedQuestions\";\r\nexport const gettingSearchedQuestionsAction = () =>\r\n    ({\r\n        type: GETTINGSEARCHEDQUESTIONS,\r\n    } as const);\r\n\r\nexport const GOTSEARCHEDQUESTIONS = \"GotSearchedQuestions\";\r\nexport const gotSearchedQuestionsAction = (questions: QuestionData[]) =>\r\n    ({\r\n        type: GOTSEARCHEDQUESTIONS,\r\n        questions: questions,\r\n    } as const);\r\n\r\ntype QuestionsActions =\r\n    | ReturnType<typeof gettingUnansweredQuestionsAction>\r\n    | ReturnType<typeof gotUnansweredQuestionsAction>\r\n    | ReturnType<typeof gettingQuestionAction>\r\n    | ReturnType<typeof gotQuestionAction>\r\n    | ReturnType<typeof gettingSearchedQuestionsAction>\r\n    | ReturnType<typeof gotSearchedQuestionsAction>;\r\n\r\nconst QuestionsReducer = (\r\n    state = InitialQuestionState,\r\n    action: QuestionsActions\r\n) => {\r\n    switch (action.type) {\r\n        case GETTINGUNANSWEREDQUESTIONS: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        }\r\n        case GOTUNANSWEREDQUESTIONS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                unanswered: action.questions,\r\n            };\r\n        }\r\n        case GETTINGQUESTION: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                viewing: null,\r\n            };\r\n        }\r\n        case GOTQUESTION: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                viewing: action.question,\r\n            };\r\n        }\r\n        case GETTINGSEARCHEDQUESTIONS: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        }\r\n        case GOTSEARCHEDQUESTIONS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                searched: action.questions,\r\n            };\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const store = configureStore<AppState>({\r\n    reducer: {\r\n        questions: QuestionsReducer,\r\n    },\r\n});\r\n\r\n// export const useAppDispatch: () => AppDispatch = useDispatch;\r\n// export const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\n","C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\SignOutPage.tsx",[],[],"C:\\Users\\wisse\\Asp.netReact_Training\\test1\\qAndA\\frontend\\src\\AuthorizedPage.tsx",[],[],{"ruleId":"122","severity":1,"message":"123","line":4,"column":5,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"126","line":6,"column":5,"nodeType":"124","messageId":"125","endLine":6,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":38,"column":8,"nodeType":"129","endLine":38,"endColumn":10,"suggestions":"130","suppressions":"131"},{"ruleId":"122","severity":1,"message":"132","line":2,"column":19,"nodeType":"124","messageId":"125","endLine":2,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":28,"column":8,"nodeType":"129","endLine":28,"endColumn":16,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":47,"column":8,"nodeType":"129","endLine":47,"endColumn":12,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":30},{"ruleId":"122","severity":1,"message":"137","line":3,"column":32,"nodeType":"124","messageId":"125","endLine":3,"endColumn":43},{"ruleId":"122","severity":1,"message":"138","line":3,"column":45,"nodeType":"124","messageId":"125","endLine":3,"endColumn":56},"@typescript-eslint/no-unused-vars","'getAllQuestions' is defined but never used.","Identifier","unusedVar","'QuestionData' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],"'useFormState' is defined but never used.",["141"],"'Page' is defined but never used.",["142"],"'TypedUseSelectorHook' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.",{"desc":"143","fix":"144"},{"kind":"145","justification":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [dispatch]",{"range":"151","text":"152"},"directive","","Update the dependencies array to be: [dispatch, search]",{"range":"153","text":"154"},"Update the dependencies array to be: [Id, dispatch]",{"range":"155","text":"156"},[1270,1272],"[dispatch]",[970,978],"[dispatch, search]",[1592,1596],"[Id, dispatch]"]